// This file is auto-generated by @hey-api/openapi-ts

export type ArchiveDto = {
    title: string;
    posts: Array<PostArchiveDto>;
};

export type CreateOrEditPostRequest = {
    title: string;
    summary: string;
    contentRaw: string;
    version: string;
    tags: Array<string> | null;
};

export type PagedDataOfPostDto = {
    total: number;
    page: number;
    perPage: number;
    records: Array<PostDto>;
};

export type PostArchiveDto = {
    id: string;
    title: string;
    createdAt: Date;
};

export type PostDto = {
    id: string;
    title: string;
    summary: string;
    createdAt: Date;
    tags: Array<string>;
};

export type PostFullDto = {
    id: string;
    title: string;
    summary: string;
    contentRaw: string;
    version: string;
    tags: Array<string>;
};

export type TagDtoWithPostCount = {
    name: string;
    postCount: number;
};

export type GetApiPostsData = {
    body?: never;
    path?: never;
    query: {
        page: number;
        perPage: number;
    };
    url: '/api/posts';
};

export type GetApiPostsResponses = {
    /**
     * OK
     */
    200: PagedDataOfPostDto;
};

export type GetApiPostsResponse = GetApiPostsResponses[keyof GetApiPostsResponses];

export type GetApiPostsByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/posts/{id}';
};

export type GetApiPostsByIdResponses = {
    /**
     * OK
     */
    200: PostFullDto;
};

export type GetApiPostsByIdResponse = GetApiPostsByIdResponses[keyof GetApiPostsByIdResponses];

export type GetApiTagsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/tags';
};

export type GetApiTagsResponses = {
    /**
     * OK
     */
    200: Array<TagDtoWithPostCount>;
};

export type GetApiTagsResponse = GetApiTagsResponses[keyof GetApiTagsResponses];

export type GetApiTagsByNameData = {
    body?: never;
    path: {
        name: string;
    };
    query?: never;
    url: '/api/tags/{name}';
};

export type GetApiTagsByNameResponses = {
    /**
     * OK
     */
    200: Array<PostArchiveDto>;
};

export type GetApiTagsByNameResponse = GetApiTagsByNameResponses[keyof GetApiTagsByNameResponses];

export type GetApiArchiveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/archive';
};

export type GetApiArchiveResponses = {
    /**
     * OK
     */
    200: Array<ArchiveDto>;
};

export type GetApiArchiveResponse = GetApiArchiveResponses[keyof GetApiArchiveResponses];

export type PostApiSendLoginLinkData = {
    body: {
        email: string;
    };
    path?: never;
    query?: never;
    url: '/api/send-login-link';
};

export type PostApiSendLoginLinkResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiLoginData = {
    body?: never;
    path?: never;
    query: {
        email: string;
        token: string;
    };
    url: '/api/login';
};

export type GetApiLoginResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiManagePostsData = {
    body: CreateOrEditPostRequest;
    path?: never;
    query?: never;
    url: '/api/manage/posts';
};

export type PostApiManagePostsResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type DeleteApiManagePostsByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/manage/posts/{id}';
};

export type DeleteApiManagePostsByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PutApiManagePostsByIdData = {
    body: CreateOrEditPostRequest;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/manage/posts/{id}';
};

export type PutApiManagePostsByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiManageTagsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/manage/tags';
};

export type GetApiManageTagsResponses = {
    /**
     * OK
     */
    200: Array<string>;
};

export type GetApiManageTagsResponse = GetApiManageTagsResponses[keyof GetApiManageTagsResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:5014/' | (string & {});
};